#端口
server.port=8081
#编码
server.tomcat.uri-encoding=UTF-8
#最大并发数
server.tomcat.max-threads=2
#接受和处理的最大连接数
server.tomcat.max-connections=20
#初始化时创建的线程数
server.tomcat.min-SpareThreads=1
#可以放到处理队列中的请求数
server.tomcat.acceptCount=100

###############################
#######config for mysql#######
###############################
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://139.9.44.104:3306/coral?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=CTT&allowMultiQueries=true&rewriteBatchedStatements=true
spring.datasource.username=root
spring.datasource.password=Jeremy2oe5.
#表明使用Druid连接池
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# druid 下面为连接池的补充设置，应用到上面所有数据源中
# druid 初始化连接数大小，最小，最大
spring.datasource.druid.initial-size=8
spring.datasource.druid.min-idle=8
spring.datasource.druid.max-active=30
# druid 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=30000
# druid 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000

# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
# druid 验证数据库连接的有效性
spring.datasource.druid.validation-query=select '1' from dual
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# druid 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-open-prepared-statements=20

spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20

## druid 状态监控
#spring.datasource.druid.filters=stat,wall,slf4j
#spring.datasource.druid.filter.stat.enabled=true
#spring.datasource.druid.filter.stat.db-type=mysql
#spring.datasource.druid.filter.stat.log-slow-sql=true
#spring.datasource.druid.filter.stat.slow-sql-millis=2000
## druid 监控过滤器
##WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
##是否启用StatFilter默认值false
#spring.datasource.druid.web-stat-filter.enabled=true
#spring.datasource.druid.web-stat-filter.exclusions="*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
## druid 监控页面
## 是否启用StatViewServlet默认值true
#spring.datasource.druid.stat-view-servlet.enabled=true
#spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
## 界面上有一个重置功能 执行这个操作之后，会导致所有计数器清零，重新计数 建议false
#spring.datasource.druid.stat-view-servlet.reset-enable=false
#spring.datasource.druid.stat-view-servlet.login-username=admin
#spring.datasource.druid.stat-view-servlet.login-password=admin
##访问控制，可以配置allow和deny这两个参数  
##配置格式 ip或者ip/子网掩码(24) 例如   192.168.2.112 ,192.168.2.112/24
##注意 由于匹配规则不支持IPV6，配置了allow或者deny之后，会导致IPV6无法访问
##spring.datasource.druid.stat-view-servlet.allow=


###############################
#######define#######
###############################
##是否允许缓存,默认不开启
#coral.persistent.cache.enable = false
##缓存时长,单位minute
#coral.persistent.cache.duration = 10
##模块缓存数量,按照模块缓存
#coral.persistent.cache.maximumSize = 2000
##初始容量
#coral.persistent.cache.initialSize = 200
##并发等级
#coral.persistent.cache.concurrencyLevel = 5

#业务分发线程池, 默认是8个核心,我们初始化改小.
spring.task.pool.corePoolSize=2
spring.task.pool.maximumPoolSize=4
spring.task.pool.keepAliveTime=60
spring.task.pool.queueCapacity=100

#游戏服ip
coral.network.connection.serverIp = 127.0.0.1
#游戏服tcp端口
coral.network.connection.tcpEnable = true
coral.network.connection.tcpPort = 5001
#游戏服websocket端口
coral.network.connection.webscoketEnable = true
coral.network.connection.webscoketPort = 6001

#以下待定
#网络组-tcp
#coral.network.connection[tcp].serverIp = 127.0.0.1
#coral.network.connection[tcp].port = 5001
#coral.network.connection[tcp].clszz = org.coral.net.network.tcp.TcpServerStarter
#网络组-webscoket
#coral.network.connection[webscoket].serverIp = 127.0.0.1
#coral.network.connection[webscoket].port = 6001
#coral.network.connection[webscoket].clszz = org.coral.net.network.tcp.TcpServerStarter

#用户自定义define
#coral.game.server.JsonPath = /configdata


